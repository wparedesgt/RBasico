<p align="center">
<img src="tidyverse.jpg">
</p>

Case_When()
========================================================
author: William V. Paredes
date: Mayo 2022
autosize: true

Introdución
========================================================
La función case_when es útil para vectorizar sentencias condicionales. Es similar a ifelse pero puede generar cualquier número de valores, en lugar de solo VERDADERO o FALSO. Aquí hay un ejemplo que divide los números en negativos, positivos y 0:

Introdución
========================================================

```{r}
library(tidyverse)
library(dslabs)
x <- c(-2, -1, 0, 1, 2)
case_when(x < 0 ~ "Negative", x > 0 ~ "Positive", TRUE ~ "Zero")
```

========================================================
Un uso común para esta función es definir variables categóricas basadas en variables existentes. Por ejemplo, supongamos que queremos comparar las tasas de asesinatos en tres grupos de estados: Nueva Inglaterra, West Coast, South y otros. Para cada estado, debemos preguntar si está en Nueva Inglaterra, si no es así, preguntamos si está en la costa oeste, si no, preguntamos si está en el sur y si no, asignamos otro. 


Así es como usamos case_when para hacer esto:
========================================================
```{r}
data(murders)
murders %>% 
  mutate(group = case_when(
    abb %in% c("ME", "NH", "VT", "MA", "RI", "CT") ~ "New England",
    abb %in% c("WA", "OR", "CA") ~ "West Coast",
    region == "South" ~ "South",
    TRUE ~ "other")) %>%
  group_by(group) %>%
  summarize(rate = sum(total) / sum(population) * 10^5) %>%
  arrange(rate)
```



beetween()
========================================================
Una operación común en el análisis de datos es determinar si un valor cae dentro de un intervalo. Podemos verificar esto usando condicionales. Por ejemplo, para verificar si los elementos de un vector x están entre a y b, podemos escribir

x >= a & x <= b


beetween()
========================================================
Sin embargo, esto puede volverse engorroso, especialmente dentro del enfoque tidyverse. La función between realiza la misma operación.


between(x, a, b)
