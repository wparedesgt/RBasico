---
title: "DPLYR"
author: "William V. Paredes"
format: 
  pptx:
    reference-doc: wvparedes.pptx
editor: visual
---

## Quarto

![](imagenes/dplyr.webp)

## Introducción

El paquete dplyr del tidyverse presenta funciones que realizan algunas de las operaciones más comunes cuando se trabaja con dataframes y usa nombres para estas funciones que son relativamente fáciles de recordar. 


## Ejemplo

-   Para cambiar la tabla de datos agregando una nueva columna, usamos mutate().
-   Para filtrar la tabla de datos a un subconjunto de filas, usamos filter(). 
-   Finalmente, para subdividir los datos seleccionando columnas específicas, usamos select().

## Función mutate()

Vamos a aprender a usar esta función de la librería dplyr, esta función nos permite agregar una columna extra con distintos cálculos, o llamando otras funciones.
Como ejemplo, vamos a querer que dentro del propio dataframe exista una columna extra en donde agregaremos la tasa de asesinatos por estado.

## Como Funciona?

La función mutate() toma el dataframe como primer argumento y el nombre y los valores de la variable como segundo argumento usando la convención nombre = valores. 
Entonces, para agregar tasas de asesinatos por cada 100,000 habitantes, usamos:

## Código

```{r, echo=TRUE}
library(tidyverse)
library(dslabs)
data("murders")
murders <- mutate(murders, rate = total/population * 10^5)
```

## Observando

```{r}
head(murders)
```

## OJO

Aunque hemos sobrescrito el objeto de asesinatos original, esto no cambia el objeto que se cargó con datos (murders). Si volvemos a cargar los datos murders, el original sobrescribirá nuestra versión mutada.


## Función filter()
Ahora suponga que queremos filtrar la tabla de datos para mostrar solo las entradas para las cuales la tasa de homicidios es inferior a 0,71. 

## Codigo
```{r, echo=TRUE}
filter(murders, rate <= 0.71)
```

